* Questions and Difficult Cases

** BIND in constraint query

#+BEGIN_SRC
    ?s ?p ?o
    BIND(COUNT(?o) AS ?count)
#+END_SRC

when ?o is substituted with a value:

    ?s ?p <property>
    BIND(COUNT(<property>) AS ?count)

One solution(?):

    ?s ?p <property>
    BIND(COUNT(<property>) AS ?count)
    
** singleton VALUES statements for ?graph 

    CONSTRUCT { ?s ?p ?o }
    WHERE {
      {
        GRAPH ?graph { ?s ?p ?o }
        VALUES ?graph { <G1> <G2> }
        FILTER ( ?p != mu:uuid )
      }
      UNION
      {
        GRAPH ?graph { ?s ?p ?o }
        VALUES ( ?graph ?p ) { <GRAPHS/UUID> mu:uuid }
      }
    }

Here, ?graph is not exclusively determined, so updates are not well-defined, unless
a triple is meant to go into all graphs. But how to define SELECT queries such as:

    SELECT *
    WHERE { ?a ?b ?c . ?d ?e ?f }

Can ?a ?b ?c and ?d ?e ?f come from different graphs, i.e., ?graph depends on ?s, ?p and ?o?
The current assumptions mean that they must be in the same graph for the query to succeed.

** singleton VALUES statements 

how to calculate dependencies? with other singletons...
** OPTIONALS and constraints that *should* be inside them

what about something like this:

    DELETE {
      ?s ?p ?o . 
      ?dataset <D> ?s 
    }
    WHERE { 
      ?s ?p ?o.
      OPTIONAL { ?s <invD> ?dataset . }
    }

the constraint on ?dataset <D> ?s will be outside of the OPTIONAL statement...
